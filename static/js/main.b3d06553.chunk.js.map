{"version":3,"sources":["services/launch-service.ts","services/rocket-service.ts","components/LaunchDetails/LaunchInfo/index.tsx","components/LaunchDetails/RocketInfo/index.tsx","components/LaunchDetails/index.tsx","components/LaunchesList/LaunchesListTable/index.tsx","components/LaunchesList/SearchBar/index.tsx","components/LaunchesList/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LaunchService","api","page","limit","name","body","options","sort","flight_number","query","$regex","$options","from","axios","post","this","pipe","map","response","data","docs","value","mapLaunch","total","totalDocs","id","get","allFavourites","getAllFavouriteLaunched","includes","push","storeFavourites","filter","favourites","localStorage","setItem","JSON","stringify","launches","getItem","parsed","parse","Array","isArray","object","upcoming","launchDate","date_utc","success","patchImage","links","patch","small","rocket","favourited","isFavourited","LaunchServiceContext","createContext","useLaunchService","useContext","RocketService","mapRocketData","type","diameter","meters","height","mass","kg","RocketServiceContext","useStyles","makeStyles","createStyles","width","PatchImage","link","classes","Typography","gutterBottom","variant","component","CardMedia","className","image","title","LaunchInfo","launchData","onFavouriteLaunch","onRemoveFavouriteLaunch","Card","CardContent","onClick","RocketInfo","rocketData","LaunchDetails","errorAlert","launchId","useState","loading","setLoading","error","setError","setLaunchData","setRocketData","launchService","rocketService","updateFavouriteStatus","updatedLaunchData","Object","assign","useEffect","sub","getLaunch","tap","launch","mergeMap","getRocket","finalize","subscribe","unsubscribe","Alert","severity","AlertTitle","IconButton","color","Link","to","LinearProgress","Grid","container","spacing","item","xs","sm","favourite","removeFavourite","loadingIndicator","padding","table","minWidth","LaunchesListTable","props","TableRow","TableCell","colSpan","TableContainer","Table","aria-label","TableHead","TableBody","index","hover","RouterLink","TablePagination","count","rowsPerPage","rowsPerPageOptions","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","target","SearchBar","onChange","FormControl","TextField","label","trim","InputProps","startAdornment","InputAdornment","position","root","paper","searchField","marginBottom","LaunchesList","setPage","setRowsPerPage","setTotal","setData","setQuery","BehaviorSubject","data$","searchQuery$","updateLaunchFavouriteStatus","newData","x","find","next","getLaunches","debounceTime","rows","App","basename","process","Container","path","exact","render","match","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","lightBlue","secondary","red","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b3d06553.chunk.js","sourcesContent":["import axios from 'axios';\nimport {createContext, useContext} from 'react';\nimport {from, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {LaunchData} from '../types/launch-data';\n\nexport interface LaunchesList {\n  data: LaunchData[],\n  total: number\n}\n\nexport class LaunchService {\n  private readonly api = 'https://api.spacexdata.com/v4/launches';\n\n  /**\n   * Fetches the paginated list of launches, ordered by flight number, desc.\n   * @param page The page number. Indexing started from the 1\n   * @param limit The page size\n   * @param name The optional name filter\n   */\n  public getLaunches(page: number, limit: number, name: string | null): Observable<LaunchesList> {\n    const body = {\n      options: {page, limit, sort: {flight_number: 'desc'}},\n      query: {}\n    };\n\n    if (name) {\n      body.query = {\n        name: {\n          $regex: `${name}`,\n          $options: 'i'\n        }\n      };\n    }\n\n    return from(axios.post(`${this.api}/query`, body))\n      .pipe(\n        map(response => response.data),\n        map(response => ({\n            data: response.docs.map((value: any) => this.mapLaunch(value)),\n            total: response.totalDocs\n          })\n        )\n      );\n  }\n\n  /**\n   * Fetches the single launch data\n   * @param id The launch id\n   */\n  public getLaunch(id: string) {\n    return from(axios.get(`${this.api}/${id}`))\n      .pipe(\n        map(response => this.mapLaunch(response.data))\n      );\n  }\n\n  /**\n   * Favourites the launch by it's id and applying randomly the color to it.\n   * @param id The launch id\n   * @return If the launch has been favourited, returns true, otherwise  false.\n   */\n  public favourite(id: string) {\n    const allFavourites = this.getAllFavouriteLaunched();\n    if (allFavourites.includes(id)) {\n      return false;\n    }\n\n    allFavourites.push(id);\n    this.storeFavourites(allFavourites);\n\n    return true;\n  }\n\n  /**\n   * Returns the flag whether the launch is favourited\n   * @param id The launch id\n   */\n  public isFavourited(id: string): boolean {\n    return this.getAllFavouriteLaunched().includes(id);\n  }\n\n  /**\n   * Removes the favourite status of the launch\n   * @param id The launch id\n   * @return If the favourite flag has been removed, returns true, otherwise false\n   */\n  public removeFavourite(id: string) {\n    const allFavourites = this.getAllFavouriteLaunched();\n    if (!allFavourites.includes(id)) {\n      return false;\n    }\n\n    this.storeFavourites(allFavourites.filter(value => value !== id));\n  }\n\n  private storeFavourites(favourites: any) {\n    localStorage.setItem('favouriteLaunches', JSON.stringify(favourites));\n  }\n\n  private getAllFavouriteLaunched(): string[] {\n    const launches = localStorage.getItem('favouriteLaunches');\n    if (!launches) {\n      return [];\n    }\n\n    const parsed = JSON.parse(launches);\n    return Array.isArray(parsed) ? parsed : [];\n  }\n\n  private mapLaunch(object: any): LaunchData {\n    return {\n      id: object.id,\n      name: object.name,\n      upcoming: object.upcoming,\n      launchDate: object.date_utc,\n      success: object.success,\n      patchImage: object.links?.patch?.small,\n      rocket: object.rocket,\n      favourited: this.isFavourited(object.id)\n    };\n  }\n}\n\nconst LaunchServiceContext = createContext<LaunchService>(new LaunchService());\n\nexport const useLaunchService = () => {\n  return useContext(LaunchServiceContext);\n};\n","import axios from 'axios';\nimport {createContext, useContext} from 'react';\nimport {from} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {RocketData} from '../types/rocket-data';\n\nexport class RocketService {\n  private readonly api = 'https://api.spacexdata.com/v4/rockets';\n\n  /**\n   * Fetches the single rocket data\n   * @param id The rocket id\n   */\n  public getRocket(id: string) {\n    return from(axios.get(`${this.api}/${id}`))\n      .pipe(\n        map(response => this.mapRocketData(response.data))\n      );\n  }\n\n  private mapRocketData(object: any): RocketData {\n    return {\n      name: object.name,\n      type: object.type,\n      diameter: object.diameter.meters,\n      height: object.height.meters,\n      mass: object.mass.kg\n    };\n  }\n}\n\nconst RocketServiceContext = createContext<RocketService>(new RocketService());\n\nexport const useRocketService = () => {\n  return useContext(RocketServiceContext);\n};\n","import {Card, CardContent, CardMedia, createStyles, makeStyles, Typography} from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport DoneIcon from '@material-ui/icons/Done';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport React from 'react';\nimport {LaunchData} from '../../../types/launch-data';\n\ninterface LaunchInfoProps {\n  launchData: LaunchData;\n  onFavouriteLaunch: () => void;\n  onRemoveFavouriteLaunch: () => void;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    patch: {\n      width: 150,\n      height: 150\n    }\n  })\n);\n\nconst PatchImage = ({link}: { link?: string }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography gutterBottom variant=\"h6\" component=\"h3\">\n        Patch image\n      </Typography>\n      {link ?\n        <CardMedia\n          className={classes.patch}\n          image={link}\n          title=\"Patch image\"\n        />\n        : <span>N/A</span>\n      }\n    </>\n  );\n};\n\nconst LaunchInfo = ({launchData, onFavouriteLaunch, onRemoveFavouriteLaunch}: LaunchInfoProps) => {\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {launchData.favourited ?\n            <StarIcon onClick={() => onRemoveFavouriteLaunch()}/> :\n            <StarBorderIcon onClick={() => onFavouriteLaunch()}/>\n          } {launchData.name}\n        </Typography>\n\n        <dl>\n          <dt>Name</dt>\n          <dd>{launchData.name}</dd>\n          <dt>Launch Date</dt>\n          <dd>{launchData.launchDate}</dd>\n          <dt>Upcoming</dt>\n          <dd className=\"upcoming-status\">\n            {launchData.upcoming\n              ? <DoneIcon/>\n              : <ClearIcon/>\n            }\n          </dd>\n          <dt>Success</dt>\n          <dd>\n            {launchData.success === null\n              ? <HelpOutlineIcon/>\n              : launchData.success ? <DoneIcon/> : <ClearIcon/>\n            }\n          </dd>\n        </dl>\n\n        <PatchImage link={launchData.patchImage}/>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default LaunchInfo;\n","import {Card, CardContent, Typography} from '@material-ui/core';\nimport React from 'react';\nimport {RocketData} from '../../../types/rocket-data';\n\ninterface RocketInfoProps {\n  rocketData: RocketData\n}\n\nconst RocketInfo = ({rocketData}: RocketInfoProps) => {\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          Rocket\n        </Typography>\n        <dl>\n          <dt>Name</dt>\n          <dd>{rocketData.name}</dd>\n          <dt>Type</dt>\n          <dd>{rocketData.type}</dd>\n          <dt>Height</dt>\n          <dd>{rocketData.mass} m</dd>\n          <dt>Diameter</dt>\n          <dd>{rocketData.diameter} m</dd>\n          <dt>Mass</dt>\n          <dd>{rocketData.mass} kg</dd>\n        </dl>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RocketInfo;\n","import {Grid, IconButton, LinearProgress} from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {Alert, AlertTitle} from '@material-ui/lab';\nimport React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {finalize, mergeMap, tap} from 'rxjs/operators';\nimport {useLaunchService} from '../../services/launch-service';\nimport {useRocketService} from '../../services/rocket-service';\nimport {LaunchData} from '../../types/launch-data';\nimport {RocketData} from '../../types/rocket-data';\nimport LaunchInfo from './LaunchInfo';\nimport RocketInfo from './RocketInfo';\n\nconst LaunchDetails = ({launchId}: { launchId: string }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [launchData, setLaunchData] = useState<LaunchData | null>(null);\n  const [rocketData, setRocketData] = useState<RocketData | null>(null);\n  const launchService = useLaunchService();\n  const rocketService = useRocketService();\n\n  const handleFavouriteLaunch = () => {\n    if (launchService.favourite(launchId)) {\n      updateFavouriteStatus(true);\n    }\n  };\n\n  const handleRemoveFavouriteLaunch = () => {\n    if (launchService.removeFavourite(launchId)) {\n      updateFavouriteStatus(false);\n    }\n  };\n\n  const updateFavouriteStatus = (favourited: boolean) => {\n    const updatedLaunchData = Object.assign({}, launchData);\n    updatedLaunchData.favourited = favourited;\n\n    setLaunchData(updatedLaunchData);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n\n    const sub = launchService.getLaunch(launchId)\n      .pipe(\n        tap(launch => setLaunchData(launch)),\n        mergeMap(launch => rocketService.getRocket(launch.rocket)),\n        tap(rocket => setRocketData(rocket)),\n        finalize(() => setLoading(false))\n      ).subscribe({error: () => setError(true)});\n\n    return () => sub.unsubscribe();\n  }, [launchId]);\n\n  let errorAlert;\n  if (error) {\n    errorAlert = (\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        The requested launch cannot be fetched :(\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      <IconButton color=\"primary\" component={Link} to=\"/\">\n        <ArrowBackIosIcon/> Back to the list\n      </IconButton>\n      {loading && <LinearProgress/>}\n      {errorAlert}\n      {launchData && rocketData &&\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <LaunchInfo launchData={launchData}\n                      onFavouriteLaunch={handleFavouriteLaunch}\n                      onRemoveFavouriteLaunch={handleRemoveFavouriteLaunch}/>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <RocketInfo rocketData={rocketData}/>\n        </Grid>\n      </Grid>\n      }\n    </>\n  );\n};\n\nexport default LaunchDetails;\n","import {\n  createStyles,\n  LinearProgress,\n  Link,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport DoneIcon from '@material-ui/icons/Done';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {LaunchData} from '../../../types/launch-data';\n\ninterface LaunchesListTableProps {\n  loading: boolean\n  data: LaunchData[];\n  page: number;\n  total: number;\n  rowsPerPage: number;\n  onChangePage: (pageNumber: number) => void;\n  onChangeRowsPerPage: (rows: number) => void;\n  onFavouriteLaunch: (id: string) => void;\n  onRemoveFavouriteLaunch: (id: string) => void;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    loadingIndicator: {\n      padding: 0\n    },\n    table: {\n      minWidth: 500\n    }\n  })\n);\n\nconst LaunchesListTable = (props: LaunchesListTableProps) => {\n  const classes = useStyles();\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    props.onChangePage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChangeRowsPerPage(parseInt(event.target.value));\n  };\n\n  let loadingIndicator;\n  if (props.loading) {\n    loadingIndicator = (\n      <TableRow>\n        <TableCell colSpan={5} className={classes.loadingIndicator}>\n          <LinearProgress/>\n        </TableCell>\n      </TableRow>\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} aria-label=\"Launches table\">\n        <TableHead>\n          <TableRow>\n            <TableCell/>\n            <TableCell>Name</TableCell>\n            <TableCell>Launch Date</TableCell>\n            <TableCell>Upcoming</TableCell>\n            <TableCell>Successful</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {loadingIndicator}\n          {props.data.map((value, index) => (\n            <TableRow hover key={'launch-' + index}>\n              <TableCell>\n                {value.favourited\n                  ? <StarIcon onClick={() => props.onRemoveFavouriteLaunch(value.id)}/>\n                  : <StarBorderIcon onClick={() => props.onFavouriteLaunch(value.id)}/>\n                }\n              </TableCell>\n              <TableCell>\n                <Typography>\n                  <Link component={RouterLink} to={'/launch/' + value.id}>{value.name}</Link>\n                </Typography>\n              </TableCell>\n              <TableCell>\n                {value.launchDate}\n              </TableCell>\n              <TableCell>\n                {value.upcoming\n                  ? <DoneIcon/>\n                  : <ClearIcon/>\n                }\n              </TableCell>\n              <TableCell>\n                {value.success == null\n                  ? <HelpOutlineIcon/>\n                  : value.success\n                    ? <DoneIcon/>\n                    : <ClearIcon/>\n                }\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        component=\"div\"\n        count={props.total}\n        page={props.page}\n        rowsPerPage={props.rowsPerPage}\n        rowsPerPageOptions={[1, 5, 10, 15]}\n\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </TableContainer>\n  );\n};\n\nexport default LaunchesListTable;\n","import {FormControl, InputAdornment, TextField} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, {ChangeEvent} from 'react';\n\ninterface SearchBarProps {\n  onChange: (value: string) => void;\n}\n\nconst SearchBar = ({onChange}: SearchBarProps) => {\n\n  const handleOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value.trim());\n  };\n\n  return (\n    <FormControl>\n      <TextField\n        id=\"launch-name\"\n        type=\"search\"\n        label=\"Launch name\"\n        onChange={handleOnChange}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon/>\n            </InputAdornment>\n          )\n        }}\n      />\n    </FormControl>\n  );\n};\n\nexport default SearchBar;\n","import {createStyles, makeStyles} from '@material-ui/core';\nimport {Alert, AlertTitle} from '@material-ui/lab';\nimport React, {useEffect, useState} from 'react';\nimport {BehaviorSubject} from 'rxjs';\nimport {debounceTime, finalize} from 'rxjs/operators';\nimport {useLaunchService} from '../../services/launch-service';\nimport {LaunchData} from '../../types/launch-data';\nimport LaunchesListTable from './LaunchesListTable';\nimport SearchBar from './SearchBar';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      width: '100%'\n    },\n    paper: {\n      padding: '2rem'\n    },\n    searchField: {\n      marginBottom: '2rem'\n    }\n  })\n);\n\nconst LaunchesList = () => {\n  const classes = useStyles();\n  const launchService = useLaunchService();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [total, setTotal] = useState(0);\n  const [data, setData] = useState([] as LaunchData[]);\n  const [query, setQuery] = useState('');\n\n  const [data$] = useState(() => new BehaviorSubject([] as LaunchData[]));\n  const [searchQuery$] = useState(() => new BehaviorSubject(''));\n\n  const handleChangePage = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (rows: number) => {\n    setRowsPerPage(rows);\n    setPage(0);\n  };\n\n  const handleQueryInput = (value: string) => {\n    searchQuery$.next(value);\n  };\n\n  const handleFavouriteLaunch = (id: string) => {\n    if (launchService.favourite(id)) {\n      updateLaunchFavouriteStatus(id, true);\n    }\n  };\n\n  const handleRemoveFavouriteLaunch = (id: string) => {\n    launchService.removeFavourite(id);\n    updateLaunchFavouriteStatus(id, false);\n  };\n\n  const updateLaunchFavouriteStatus = (id: string, favourited: boolean) => {\n    // Deep clone data\n    const newData = data.map(x => Object.assign({}, x));\n    const launchData = newData.find(launch => launch.id == id);\n    if (launchData) {\n      launchData.favourited = favourited;\n    }\n\n    data$.next(newData);\n  };\n\n  useEffect(() => {\n    const sub = data$.subscribe(setData);\n\n    return () => sub.unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const sub = launchService.getLaunches(page + 1, rowsPerPage, query ? query : null)\n      .pipe(finalize(() => setLoading(false)))\n      .subscribe({\n        next: (response) => {\n          data$.next(response.data);\n          setTotal(response.total);\n        },\n        error: () => setError(true)\n      });\n\n    return () => sub.unsubscribe();\n  }, [page, rowsPerPage, query]);\n\n  useEffect(() => {\n    const sub = searchQuery$\n      .pipe(debounceTime(500))\n      .subscribe((value) => {\n        setQuery(value);\n        setPage(0);\n      });\n\n    return () => sub.unsubscribe();\n  }, []);\n\n  let errorAlert;\n  if (error) {\n    errorAlert = (\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        The launches list cannot be fetched :(\n      </Alert>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.searchField}>\n        <SearchBar onChange={handleQueryInput}/>\n      </div>\n      {errorAlert}\n      <LaunchesListTable\n        loading={loading}\n        data={data}\n        total={total}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n        onFavouriteLaunch={handleFavouriteLaunch}\n        onRemoveFavouriteLaunch={handleRemoveFavouriteLaunch}\n      />\n    </div>\n  );\n};\n\nexport default LaunchesList;\n","import {Container} from '@material-ui/core';\nimport React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport LaunchDetails from './components/LaunchDetails';\nimport LaunchesList from './components/LaunchesList';\n\nfunction App() {\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <Container>\n        <Switch>\n          <Route path=\"/launch/:id\"\n                 exact\n                 render={(props: RouteComponentProps<any>) =>\n                   <LaunchDetails launchId={props.match.params.id}/>\n                 }\n          />\n          <Route path=\"/\">\n            <LaunchesList/>\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CssBaseline, ThemeProvider, unstable_createMuiStrictModeTheme as createMuiTheme} from '@material-ui/core';\nimport {lightBlue, red} from '@material-ui/core/colors';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: lightBlue,\n    secondary: red,\n    type: 'dark'\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <App/>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}